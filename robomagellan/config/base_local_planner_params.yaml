#For full documentation of the parameters in this file, and a list of all the
#parameters available for TrajectoryPlannerROS, please see
#http://www.ros.org/wiki/base_local_planner
TrajectoryPlannerROS:
  #Set the acceleration limits of the robot
  acc_lim_th: 3.2 
  acc_lim_x: 2.5
  acc_lim_y: 2.5

  #Set the velocity limits of the robot
  max_vel_x: 1.5
  min_vel_x: 0.33
  max_rotational_vel: 3.0
  min_in_place_rotational_vel: 1.5

  #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.4
  
  # since our robot has three degrees of freedom: position in X,Y and orientation, 
  # but we can only control two degrees of freedom our robot is non-holonomic
  # http://en.wikipedia.org/wiki/Holonomic
  holonomic_robot: false

  # Set the tolerance on achieving a goal
  # We set this rather high because we don't care about achieving intermediate waypoints
  # exactly, and cone waypoints will be captured by the cone_capture node
  xy_goal_tolerance: 0.5
  # we don't care at all what the yaw is when reaching a goal
  yaw_goal_tolerance: 3.14

  # the amount of time to forward-simulate trajectories, in seconds
  sim_time: 1.7
  # the step size to take between points in a given trajectory
  sim_granularity: 0.025
  # the number of samples to use when exploring the x velocity space
  vx_samples: 3
  # the number of samples to use when exploring the theta velocity space
  vtheta_samples: 20

  # how much the controller should try to reach its local goal 
  goal_distance_bias: 0.8
  # how much the controller should try to stay to the path it was given
  path_distance_bias: 0.6
  # how much the controller should try to avoid obstacles
  occdist_scale: 0.01
  # how far to look ahead when scoring different in-place rotation trajectories
  heading_lookahead: 0.325

  # We're using Dynamic Window Approach to control instead of Trajectory Rollout 
  # this should improve performance
  dwa: true

  #How far the robot must travel before oscillation flags are reset
  oscillation_reset_dist: 0.05

  #Eat up the plan as the robot moves along it
  prune_plan: true
